Absolutely! Here's a clear step-by-step guide to setting up a new NestJS project using the Nest CLI.

---

# NestJS Project Setup Using Nest CLI

Nest CLI is a command-line interface tool that helps you quickly create and manage NestJS projects.

---

## Step 1: Install Nest CLI globally

Run this command to install NestJS CLI globally on your machine (using npm):

```bash
npm i -g @nestjs/cli
```

* This allows you to run the `nest` command anywhere on your system.

---

## Step 2: Create a new NestJS project

Now, use the CLI to create a new project:

```bash
nest new project-name
```

Replace `project-name` with whatever you want to call your project.

---

## What happens here?

* The CLI will scaffold a full NestJS project with all the basic boilerplate code.
* You will be prompted to choose a package manager (npm or yarn).
* The CLI will install all dependencies automatically.
* You get a ready-to-go project structure with a simple example controller and service.

---

## Step 3: Navigate to your project folder

```bash
cd project-name
```

---

## Step 4: Run the development server

Run the app using:

```bash
npm run start
```

Or if you prefer hot-reload for development:

```bash
npm run start:dev
```

---

## Step 5: Open your browser and test

By default, the app runs at:

```
http://localhost:3000
```

Open that URL, and you should see:

```
Hello World!
```

---

## Project Structure Overview

When you create a NestJS app using CLI, you get:

```
project-name/
├── src/
│   ├── app.controller.ts      # Example controller
│   ├── app.controller.spec.ts # Test for controller
│   ├── app.module.ts          # Root module
│   ├── app.service.ts         # Example service
│   └── main.ts                # Entry point of the app
├── test/                     # Tests folder
├── node_modules/
├── package.json
├── tsconfig.json
└── ...other config files
```

---

### Summary

* Install Nest CLI globally
* Create new project with `nest new project-name`
* Change directory into project and start server
* Default app shows "Hello World!" on localhost:3000

---

If you want, I can also help you build your first controller or service next! Would you like that?
